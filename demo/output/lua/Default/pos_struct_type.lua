-- automatically generated by the FlatBuffers compiler, do not modify

-- namespace: Default

local flatbuffers = require('flatbuffers')

local pos_struct_type = {} -- the module
local pos_struct_type_mt = {} -- the class metatable

function pos_struct_type.New()
    local o = {}
    setmetatable(o, {__index = function(t, key)
    local f = rawget(pos_struct_type_mt, key)
    if key == 'Init' then
        return f
    end
    return f(t)
end})    return o
end
function pos_struct_type.GetRootAspos_struct_type(buf, offset)
    local n = flatbuffers.N.UOffsetT:Unpack(buf, offset)
    local o = pos_struct_type.New()
    o:Init(buf, n + offset)
    return o
end
function pos_struct_type_mt:Init(buf, pos)
    self.view = flatbuffers.view.New(buf, pos)
end
function pos_struct_type_mt:pos_x()
    local o = self.view:Offset(4)
    if o ~= 0 then
        return self.view:Get(flatbuffers.N.Int32, o + self.view.pos)
    end
    return 0
end
function pos_struct_type_mt:pos_y()
    local o = self.view:Offset(6)
    if o ~= 0 then
        return self.view:Get(flatbuffers.N.Int32, o + self.view.pos)
    end
    return 0
end
function pos_struct_type_mt:pos_z()
    local o = self.view:Offset(8)
    if o ~= 0 then
        return self.view:Get(flatbuffers.N.Int32, o + self.view.pos)
    end
    return 0
end
function pos_struct_type.Start(builder) builder:StartObject(3) end
function pos_struct_type.AddPosX(builder, posX) builder:PrependInt32Slot(0, posX, 0) end
function pos_struct_type.AddPosY(builder, posY) builder:PrependInt32Slot(1, posY, 0) end
function pos_struct_type.AddPosZ(builder, posZ) builder:PrependInt32Slot(2, posZ, 0) end
function pos_struct_type.End(builder) return builder:EndObject() end

return pos_struct_type -- return the module